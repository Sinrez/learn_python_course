#@bank_bottom_bot

import sys

#—ç—Ç–æ –ª–æ–∫–∞–ª—å–Ω—ã–µ –∫–æ—Å—Ç—ã–ª–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤, –¥–æ–±–∞–≤–ª—è—Ç—å –ø–µ—Ä–µ–¥ –∏–º–ø–æ—Ä—Ç–æ–º –æ—Å–Ω–æ–≤–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
sys.path.append('..') 
sys.path.append('/Volumes/D/learn_python_course/bank_bottom_proj/webapp_bottom') 
sys.path.append('bank_bottom_proj/webapp_bottom')

from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
import logging
import settings
from telegram import ReplyKeyboardMarkup, KeyboardButton
from get_banks import get_weekly_bottom, get_all_categories_week
import datetime
from utils import db, get_or_create_user, subscribe_user, unsubscribe_user


msg = '–Ø - –±–æ—Ç "–î–Ω–æ –±–∞–Ω–∫–∏" –ø–æ–∫–∞–∑—ã–≤–∞—é –∫–∞–∫–∏–µ –±–∞–Ω–∫–∏ üè¶ –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –ø—Ä–æ–±–∏–ª–∏ –¥–Ω–æ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ üí©. –ñ–º–∏—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:'


keyb = [
    [KeyboardButton('–£–∑–Ω–∞—Ç—å –∞–Ω—Ç–∏—Ä–µ–π—Ç–∏–Ω–≥ –ª–∏–¥–µ—Ä–æ–≤ –Ω–µ–¥–µ–ª–∏'), KeyboardButton('–£–∑–Ω–∞—Ç—å –∞–Ω—Ç–∏—Ä–µ–π—Ç–∏–Ω–≥ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º')]
]

# –∫–Ω–æ–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –æ—Ç–ø–∏—Å–∫–∏
subscribe_button = KeyboardButton('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è')
unsubscribe_button = KeyboardButton('–û—Ç–ø–∏—Å–∞—Ç—å—Å—è')
keyb.append([subscribe_button, unsubscribe_button])

# –ª–æ–≥–∏—Ä—É–µ–º –≤ —Ñ–∞–π–ª
logging.basicConfig(
    level=logging.INFO,
    filename='bot.log',
    format="%(asctime)s - %(module)s - %(levelname)s - %(funcName)s: %(lineno)d - %(message)s",
    datefmt='%H:%M:%S',
)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
def start_handler(update, context):
    print('–í—ã–∑–≤–∞–Ω /start')
    #—Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏—à–µ–¥—à–µ–≥–æ —é–∑–µ—Ä–∞ –≤ –±–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏
    user = get_or_create_user(update.effective_user, update.message.chat.id)
    print(update)
    user_f_name = update.message.chat.first_name
    user_l_name = update.message.chat.last_name
    user_id = update.message.chat.id
    user_nick = update.message.chat.username
    print()
    print(f'–ü—Ä–∏—à–µ–ª —é–∑–µ—Ä {user_f_name} {user_l_name} c id = {user_id} –∏ username = {user_nick}')
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏
    update.message.reply_text(msg, reply_markup=ReplyKeyboardMarkup(keyboard=keyb, resize_keyboard=True))

def button1_handler(update, context):
    dictionary = get_weekly_bottom()
    result = '\n'.join([f'{key}: {value}' for key, value in dictionary.items()])
    update.message.reply_text(str(result))
    
def button2_handler(update, context):
    dictionary = get_all_categories_week()
    categories_info = ""
    for category, val in dictionary.items():
        result = '\n'.join([f'{key}: {value}' for key, value in val.items()])
        categories_info += f"{category}:\n{result}\n"
        categories_info += "\n"
    update.message.reply_text(categories_info)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –¥–ª—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏
def send_weekly_bottom(context: CallbackContext):
    chat_id = context.job.context
    dictionary = get_weekly_bottom()
    result = '\n'.join([f'{key}: {value}' for key, value in dictionary.items()])
    context.bot.send_message(chat_id=chat_id, text=str(result))
    
def subscribe(update, context):
    user = get_or_create_user(update.effective_user, update.message.chat.id)
    subscribe_user(user)
    update.message.reply_text('–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å')

def unsubscribe(update, context):
    user = get_or_create_user(update.effective_user, update.message.chat.id)
    unsubscribe_user(user)
    update.message.reply_text('–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å')

# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π Telegram, "—Ç–µ–ª–æ" –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞
def main():
    try:
        mybot1 = Updater(settings.TOKEN, use_context=True)
        job_queue = mybot1.job_queue
        dp = mybot1.dispatcher
        dp.add_handler(CommandHandler("start", start_handler))
        dp.add_handler(MessageHandler(Filters.regex('–£–∑–Ω–∞—Ç—å –∞–Ω—Ç–∏—Ä–µ–π—Ç–∏–Ω–≥ –ª–∏–¥–µ—Ä–æ–≤ –Ω–µ–¥–µ–ª–∏'), button1_handler))
        dp.add_handler(MessageHandler(Filters.regex('–£–∑–Ω–∞—Ç—å –∞–Ω—Ç–∏—Ä–µ–π—Ç–∏–Ω–≥ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º'), button2_handler))
        # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –æ—Ç–ø–∏—Å–∫–∏
        dp.add_handler(CommandHandler('subscribe', subscribe))
        dp.add_handler(CommandHandler('unsubscribe', unsubscribe))
        dp.add_handler(MessageHandler(Filters.regex('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è'), subscribe))
        dp.add_handler(MessageHandler(Filters.regex('–û—Ç–ø–∏—Å–∞—Ç—å—Å—è'), unsubscribe))
        # –ó–∞–¥–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        weekly_time = datetime.time(hour=13, minute=0, second=0)
        weekday = 4 # –ü—è—Ç–Ω–∏—Ü–∞
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –Ω–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ
        #–ø–∞—Ä–∞–º–µ—Ç—Ä interval —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ 604800 —Å–µ–∫—É–Ω–¥, —á—Ç–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–¥–Ω–æ–π –Ω–µ–¥–µ–ª–µ (60 —Å–µ–∫—É–Ω–¥ √ó 60 –º–∏–Ω—É—Ç √ó 24 —á–∞—Å–∞ √ó 7 –¥–Ω–µ–π)
        job_queue.run_repeating(send_weekly_bottom, interval=604800, first=weekly_time, context=weekday)

        logging.info('–ë–æ—Ç —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª!')
        mybot1.start_polling()
        mybot1.idle()
    except Exception as ex:
        logging.info(f'–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ main: {ex}')
        print(f'–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ main: {ex}')

if __name__ == '__main__':
    main()